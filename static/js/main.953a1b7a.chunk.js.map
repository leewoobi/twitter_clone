{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFacory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshop","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","length","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setIsLoggedIn","setUserobj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.953a1b7a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:  process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId:process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n firebase.initializeApp(firebaseConfig);\r\n\r\n export const firebaseInstance = firebase; \r\n\r\n export const authService = firebase.auth();\r\n export const dbService = firebase.firestore();\r\n export const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () =>{\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount,setNewAccount] = useState(true);\r\n    const [error,setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {target : {name, value}, } =event; \r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n             let data; \r\n            if(newAccount){\r\n            data =  await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                )\r\n            }else{\r\n\r\n              data =  await authService.signInWithEmailAndPassword(email,password)\r\n            }\r\n            console.log(data);\r\n        }catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev)=> !prev);\r\n    return(\r\n    <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n          <input\r\n             name=\"email\"\r\n             type=\"text\"\r\n             placeholder=\"Email\"\r\n             required value={email}\r\n             onChange={onChange}\r\n             className=\"authInput\"\r\n             />\r\n          <input\r\n             name=\"password\"\r\n             type=\"password\"\r\n             placeholder =\"Password\"\r\n             required value={password}\r\n             onChange={onChange}\r\n             className=\"authInput\"\r\n             />\r\n          <input\r\n             type=\"submit\" \r\n             className=\"authInput authSubmit\"\r\n             value={newAccount ? \"Create Account\" : \"Log In\" } />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign in\" : \"Create Account\"}\r\n        </span>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default AuthForm","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = ()=> {\r\n\r\n    const onSocialClick = async (event) => {\r\n     const {\r\n         target:{name}\r\n        } = event; \r\n     let provider; \r\n     \r\n     if(name === \"google\"){\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n     }else if(name === \"github\")\r\n    {\r\n        provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n  const data =  await authService.signInWithPopup(provider);\r\n  console.log(data);\r\n}\r\n    return (\r\n\r\n        \r\n        <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button> \r\n    </div>\r\n</div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React,{ useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj,isOwner}) => {\r\n    const [editing , setEditing ] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async ()=> {\r\n        const ok = window.confirm('삭제할거임?');\r\n        console.log(ok)\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete(); \r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev)=> !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet})\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewNweet(value);\r\n    }\r\n  return  (\r\n        <div className=\"nweet\">\r\n            {\r\n            editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input\r\n                       type=\"text\"\r\n                       placeholder=\"edit your nweet\"\r\n                       value={newNweet}\r\n                       required\r\n                       autoFocus\r\n                       onChange= {onChange}\r\n                       className=\"formInput\"\r\n                       />\r\n                      <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                </form> \r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                     Cancel\r\n                 </span>\r\n                </>\r\n            ) : (\r\n            <> \r\n            <h4>{nweetObj.text}</h4> \r\n            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n            { isOwner && ( \r\n                <div className=\"nweet__actions\">\r\n                     <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                      <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </span>\r\n                </div>\r\n             )}\r\n          </>\r\n           )}\r\n        </div>\r\n    \r\n    )\r\n};\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n\r\n    const [attachment,setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if( attachment !== \"\"){\r\n           const attachmentRef =  storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n           const response = await attachmentRef.putString(attachment,\"data_url\");\r\n           attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n               text: nweet,\r\n               createdAt : Date.now(),\r\n               creatorId: userObj.uid,\r\n               attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n           setNweet(\"\");\r\n           setAttachment(\"\");\r\n       };\r\n       const onChange = (event) => {\r\n           const {\r\n               target: {value}\r\n           } =event;\r\n           setNweet(value);\r\n       }; \r\n   const onFileChange = (event) =>{\r\n     const {\r\n         target : {files},\r\n       } = event;\r\n       const theFile = files[0];\r\n       const reader = new FileReader();\r\n       reader.onloadend = (finishedEvent) => {\r\n           const {\r\n               currentTarget: {result},\r\n           } = finishedEvent;\r\n           setAttachment(result);\r\n       }\r\n       reader.readAsDataURL(theFile);\r\n   };\r\n   const onClearAttachment = () => setAttachment(\"\");\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n         id=\"attach-file\"\r\n         type=\"file\"\r\n         accept=\"image/*\"\r\n         onChange={onFileChange}\r\n         style={{\r\n           opacity: 0,\r\n         }}\r\n         \r\n       />\r\n        {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              style={{\r\n                backgroundImage: attachment,\r\n              }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    );\r\n};\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\n\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport NweetFactory from \"components/NweetFacory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(()=>{ \r\n       dbService.collection(\"nweets\").onSnapshot((snapshop) => {\r\n        const nweetArray = snapshop.docs.map((doc)=> ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n       });\r\n    },[]);\r\n    \r\nreturn(\r\n    <div className=\"container\">\r\n        <NweetFactory userObj={userObj}/>\r\n        <div style={{ marginTop: 30 }}>\r\n            {nweets.map((nweet) => (\r\n                                      <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n            ))}\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n<nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n              <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n          {userObj?.displayName?.length\r\n? `${userObj.displayName}'s Profile`\r\n: \"Profile\"}\r\n          </span>\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import { authService, dbService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\n\r\nexport default ({refreshUser,userObj}) =>{\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { \r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n           const response = await userObj.updateProfile({\r\n                displayName : newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    // const getMyNweets = async()=> {\r\n    //     const nweets = await dbService\r\n    //         .collection(\"nweets\")\r\n    //         .where(\"creatorId\", \"==\", userObj.uid) //필터링 \r\n    //         .orderBy(\"createdAt\")\r\n    //         .get();\r\n    //         console.log(nweets.docs.map((doc) => doc.data()));\r\n    // }\r\n    // useEffect(()=>{\r\n    //     getMyNweets();\r\n    // }, [])\r\n    return (\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n            onChange={onChange}\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Display name\"\r\n            value ={newDisplayName}\r\n            className=\"formInput\"\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Profile\"\r\n              className=\"formBtn\"\r\n              style={{\r\n                marginTop: 10,\r\n              }}\r\n            />\r\n         </form>\r\n         <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { HashRouter as Router, Route ,Switch ,Redirect } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\n\r\nconst AppRouter = ({refreshUser,isLoggedIn, userObj}) =>  {\r\n   \r\n    return (\r\n        <Router > \r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                              <div\r\n                              style={{\r\n                                maxWidth: 890,\r\n                                width: \"100%\",\r\n                                margin: \"0 auto\",\r\n                                marginTop: 80,\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                              }}\r\n                            >\r\n                    <Route exact path =\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path =\"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                    </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                    <Route exact path =\"/\"  >\r\n                         <Auth/> \r\n                    </Route>\r\n                       <Redirect from =\"*\" to=\"/\"/>\r\n                       </>\r\n               )}\r\n            </Switch>\r\n        </Router>\r\n    ); \r\n};\r\n\r\nexport default AppRouter;","import React,{useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserobj] = useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setIsLoggedIn(true);\n        setUserobj({\n          displayName : user.displayName,\n          uid : user.uid ,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }else{\n        // setUserobj(null);\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  },[])\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserobj({\n      displayName : user.displayName,\n      uid : user.uid ,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n    {init ? <AppRouter\n               refreshUser={refreshUser} \n               isLoggedIn={isLoggedIn}\n               userObj={userObj}\n              /> : \"Initializeing...\" }\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"style.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}